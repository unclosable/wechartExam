

ext{
	jdkVersion = '1.8'
	myBatisVsersion= '3.4.1'
	springMybatisVersion= '1.3.0'
	druidVersion = '1.0.20'
	pagehelperVersion = '4.1.6'
	jsqlparserVersion = '0.9.5'
	fastjsonVersion = '1.2.13'
	mysqlVersion = '5.1.40'
	commonsVersion = '3.4'
	guavaVersion = '19.0'
	h2Version = '1.4.192'
	projectVersion = '0.1.1'
}


buildscript {
	ext { springBootVersion = '1.5.1.RELEASE' }
	repositories {
		mavenCentral()
		maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
		maven { url 'http://repo2.maven.org/maven2/' }
		maven { url 'http://maven.net.cn/content/groups/public/' }
		maven { url 'https://plugins.gradle.org/m2/'}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE')
		classpath "org.sonarqube.gradle:gradle-sonarqube-plugin:1.1"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "org.sonarqube"

jar {
	baseName = project.name
	version =  "$projectVersion"
}
sourceCompatibility = "${jdkVersion}"
targetCompatibility = "${jdkVersion}"

repositories {
	mavenCentral()
	maven { url 'https://plugins.gradle.org/m2/'}
	flatDir { dirs 'lib' }
}

configurations {
	providedRuntime
	driver
	compile.exclude module: "spring-boot-starter-tomcat"
}


sonarqube {
	properties { property "sonar.sourceEncoding", "UTF-8" }
}

dependencies {

	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-jetty')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile('org.springframework:spring-context:4.3.6.RELEASE')
	compile('org.springframework:spring-context-support:4.3.6.RELEASE')

	compile("org.mybatis:mybatis:${myBatisVsersion}")
	compile("org.mybatis:mybatis-spring:${springMybatisVersion}")
	compile("com.alibaba:druid:${druidVersion}")

	compile("com.github.pagehelper:pagehelper:${pagehelperVersion}")
	compile("com.github.jsqlparser:jsqlparser:${jsqlparserVersion}")
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-consul-all
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-all', version: '1.2.1.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-consul-discovery
	compile group: 'org.springframework.cloud', name: 'spring-cloud-consul-dependencies', version: '1.2.1.RELEASE'
	
	

	compile fileTree(dir:'lib',include:'*.jar')


	compile("com.alibaba:fastjson:${fastjsonVersion}")

	compile("mysql:mysql-connector-java:${mysqlVersion}")
	compile("org.apache.commons:commons-lang3:${commonsVersion}")
//	compile("com.google.guava:guava:${guavaVersion}")

	// https://mvnrepository.com/artifact/redis.clients/jedis
	//	compile group: 'redis.clients', name: 'jedis', version: '2.9.0'

	//    compile("com.h2database:h2:${h2Version}")
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	//	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
	// https://mvnrepository.com/artifact/com.corundumstudio.socketio/netty-socketio
	//	compile group: 'com.corundumstudio.socketio', name: 'netty-socketio', version: '1.7.12'


	testCompile("junit:junit")


}


eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) { gradleVersion = '2.8' }
