<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis">
			<value>1000</value>
		</property>
		<property name="logSlowSql">
			<value>true</value>
		</property>
		<property name="mergeSql">
			<value>true</value>
		</property>
	</bean>

	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="resultSetLogEnabled" value="false" />
		<property name="dataSourceLogEnabled" value="true"></property>
	</bean>

	<bean id="druidDataSourceMySql" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${spring.datasource.url}" />
		<property name="username" value="${spring.datasource.username}" />
		<property name="password" value="${spring.datasource.password}" />
		<!--初始化连接大小 -->
		<property name="initialSize" value="10" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="100" />
		<!-- 最小连接池数量 -->
		<!-- <property name="minIdle" value="0"/> -->
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<!--<property name="validationQuery" value="${validationQuery}"/> -->
		<!-- <property name="testOnBorrow" value="false"/> <property name="testOnReturn" 
			value="false"/> -->
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。 -->
		<property name="poolPreparedStatements" value="false" />
		<!-- <property name="maxPoolPreparedStatementPerConnectionSize" value="20" 
			/> -->

		<!-- 监控数据库 -->
		<property name="filters" value="config" />
		<property name="connectionProperties" value="config.decrypt=false" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="log-filter" />
			</list>
		</property>
	</bean>

	<!-- mybatis文件配置，扫描所有mapper文件 -->

	<bean id="mysqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="druidDataSourceMySql" p:configLocation="classpath:config/mybatis/mybatis-config.xml"
		p:mapperLocations="classpath:config/mybatis/mappers/*.xml" />



	<bean id="mySqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="mysqlSessionFactory" />
	</bean>


	<!-- spring与mybatis整合配置，扫描所有dao ,生成与DAO类相同名字的bean（除了首字母小写） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.unclosable.mappers" p:sqlSessionFactoryBeanName="mysqlSessionFactory" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="druidDataSourceMySql" />
	<tx:annotation-driven mode="proxy" transaction-manager="transactionManager" />
</beans>